---
layout:     post
title:      "Vim命令"
subtitle:   "找个地方放放Vim命令"
date:       2017-02-10 22:00:00
author:     "林佩勤"
header-img: "img/post-bg.jpg"
tags:
	- Linux
    - Vim
---

> 简单的记录一下vim命令


## 前言

之前写过一篇类似的记录Git命令的文章，这篇文章则是将注意力放在Vim上，Vim是最便捷的编辑器之一，经常在Linux系统下使用到，本人也是希望通过这篇文章将记忆中零散的Vim命令整理一下，顺便感受一下这个编辑器的神秘力量。

---

## 正文

Vim有三种工作模式，由于本文主要是为了己用，所以只记录一些本人经常需要用到且认为有必要一提的命令，这些命令大部分都是交互模式下的命令。下面的这些命令是我结合本人的使用习惯以及Vimtutor文档进行总结的。废话不多说，就让我们开始盘点这些命令。

**移动**

- **0**：移动至行首
- **$**：移动至行末
- **w**：以单词为单位进行移动

**删除**

- **x**：删除一个字符
- **dd**：删除一行，也有剪切的作用
- **dw**：删除一个单词
- **d5w**：删除五个单词
- **d0**：删除至行首
- **d$**：删除至行末

**复制、粘贴和撤销**

- **yy**：复制
- **p**：粘贴
- **u**：撤销

**替换**

- **rs**：替换一个字符。r是替换的意思，此命令是将该字符替换为s
- **R**：进入替代模式，可一次性替换多个字符

**跳转**

- **7gg**：跳到第七行
- **7G**：跳到第七行
- **gg**：跳到第一行
- **G**：跳到最后一行

**查找、替换和合并**

- **/**：查找，输入查找字符串，按下回车键即可查找。查找下一个匹配项按n。反向查找按N。默认从当前光标处开始。如果要从文件最开始处查找，则将斜杠（/）替换为问号（?）即可，其他功能是一样的
- **:s/旧字符串/新字符串**：替换光标所在行的第一个匹配的字符串
- **:s/旧字符串/新字符串/g**：替换光标所在行的所有匹配的字符串
- **:#,#s/旧字符串/新字符串/g**：替换文件中第#行到第#行的所有匹配的字符串
- **:%s/旧字符串/新字符串/g**：替换文件中所有匹配的字符串
- **:r 文件名**：在光标后插入一个文件的内容，可以用Tab键来自动补全另一个文件的路径

> 注：以上的替换和查找既可以使用简单字符串，也可以使用正则表达式

**分屏**

- **:sp**：横向分屏
- **:sp 文件名**：横向分屏，并在新的一块屏幕中打开该文件
- **:vsp**：垂直分屏
- **Ctrl+w**：跳转viewport
- **Ctrl+w+j**：跳转到下方的viewport，而h、k和l分别对应的是左、上和右
- **Ctrl+w然后按+**：扩大当前viewport
- **Ctrl+w然后按-**：缩小当前viewport
- **Ctrl+w然后按=**：重新均匀分配各个viewport的占比
- **Ctrl+w然后按r**：调换各个viewport的位置。用R的话是反向调换
- **Ctrl+w然后按q或按c**：关闭当前viewport
- **Ctrl+o或者:only**：只保留当前所在viewport，关闭其他viewport

**其他**

- **:!ls**：在Vim打开文件的所在目录运行ls命令

## 后记

总结完之后，让我对Vim的好感度骤升，听说Vim和Emacs是一对老冤家，希望有机会也学习一下Emacs！
