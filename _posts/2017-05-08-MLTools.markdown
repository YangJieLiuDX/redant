---
layout:     post
title:      "机器学习游玩记第十二站"
subtitle:   "机器学习工具大杂烩"
date:       2017-05-08 12:30:00
author:     "林佩勤"
header-img: "img/post-bg.jpg"
tags:
    - 机器学习
    - Python
---

> 工具使劳动更轻松！


## 前言

这是《机器学习实战》笔记的最后一篇，围绕此书的最后一章展开。最后一章的内容是关于一些工具的使用，包括降维、奇异值分解和大数据，让我们赶快来学习它们吧！

---

## 正文

#### 降维

降维可以对已有数据进行简化，降低很多算法的计算开销，其主要方法包括：主成分分析、因子分析和独立成分分析。而这里我们的重点是主成分分析，主成分分析简称PCA，其实现的核心步骤是移动坐标轴，具体实现代码如下：

```python
from numpy import *
import matplotlib
import matplotlib.pyplot as plt


def loadDataSet(fileName, delim='\t'):
    fr = open(fileName)
    stringArr = [line.strip().split(delim) for line in fr.readlines()]
    datArr = [list(map(float, line)) for line in stringArr]
    return mat(datArr)


def pca(dataMat, topNfeat=9999999):
    meanVals = mean(dataMat, axis=0)
    meanRemoved = dataMat - meanVals
    covMat = cov(meanRemoved, rowvar=0)
    eigVals, eigVects = linalg.eig(mat(covMat))
    eigValInd = argsort(eigVals)
    eigValInd = eigValInd[:-(topNfeat+1):-1]
    redEigVects = eigVects[:, eigValInd]
    lowDDataMat = meanRemoved * redEigVects
    reconMat = (lowDDataMat * redEigVects.T) + meanVals
    return lowDDataMat, reconMat


if __name__ == '__main__':
    dataMat = loadDataSet('testSet.txt')
    lowDMat, reconMat = pca(dataMat, 1)
    fig = plt.figure()
    ax = fig.add_subplot(111)
    ax.scatter(dataMat[:, 0].flatten().A[0],
               dataMat[:, 1].flatten().A[0],
               marker='^',
               s=90)
    ax.scatter(reconMat[:, 0].flatten().A[0],
               reconMat[:, 1].flatten().A[0],
               marker='o',
               s=50,
               c='red')
    plt.show()
```

#### 奇异值分解

奇异值分解简称SVD，是提取信息的强大工具。利用SVD实现，我们能够用小得多的数据集来表示原始数据集。实际上，有很多软件包已经实现了SVD，NumPy中就有相应的工具包，具体使用如下：

```python
from numpy import *
from numpy import linalg


def loadExData():
    return[[0, 0, 0, 2, 2],
           [0, 0, 0, 3, 3],
           [0, 0, 0, 1, 1],
           [1, 1, 1, 0, 0],
           [2, 2, 2, 0, 0],
           [5, 5, 5, 0, 0],
           [1, 1, 1, 0, 0]]

if __name__ == "__main__":
    Data = loadExData()
    U, Sigma, VT = linalg.svd(Data)
    print(Sigma)
```

SVD应用相当广泛，尤其是在推荐引擎领域，感兴趣的朋友可以去进一步学习！

#### 大数据与MapReduce

随着数据量越来越大，企图在一台计算机上处理数据已经变得越来越不现实了。针对这个问题，MapReduce出现了，它是一个出色的分布式计算的框架，而Hadoop正是它的一个免费开源的实现。利用Hadoop和MapReduce可以实现对大型数据集的分布计算，如果想试验一下的话，可以去AWS申请实验几天看看！

## 后记

这一系列的文章终于结束了，希望从这里出发，不断地提高自己的技能，为崇高的梦想而奋斗！
