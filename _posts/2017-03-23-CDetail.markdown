---
layout:     post
title:      "C语言的细枝末节"
subtitle:   "献给至始至终的C语言"
date:       2017-03-23 15:30:00
author:     "林佩勤"
header-img: "img/post-bg.jpg"
tags:
    - C
---

> 不定期更新的C语言笔记~~


## 前言

C语言是进入大学之后第一个接触的编程语言，虽然过了三年，但对它的喜爱丝毫不减，今天就通过这篇文章，讲讲关于C语言的一些知识点。

---

## 正文

**C语言中有bool变量吗**

C语言在C99标准之前是没有布尔变量的，而在C99标准中只要导入stdbool.h就可以使用bool变量。

**怎样快速得知一个数是否是2的幂，如果是，又是2的几次方**

2的幂次方写成二进制后是1后面跟n个0，所以我们可以用`(number & number - 1) == 0`（这个式子左边的两个运算符都是遵循从右到左的运算规则）来进行判断，而几次方则需利用循环或递归获取，具体代码如下：

```c
#include <stdio.h>
#include <stdlib.h>

// 递归判断一个数是2的多少次方
int log2(int value) {
    if (value == 1)
        return 0;
    else
        return 1 + log2(value >> 1);
}

int main(void) {
    int num;
    scanf("%d", &num);
    if(num & (num - 1))
        printf("%d不是2的幂次方\n", num);
    else
        printf("%d是2的%d次方\n", num, log2(num));
    return 0;
}
```

**求一个二进制数中1的个数**

通过上面的例子，我们可以发现，`(number & number - 1)`能移除掉二进制中最右边的1，循环移除，可以将1全部移除，利用这一点我们可以求一个二进制数中1的个数，代码如下：

```c
int Func(int data) { 
    int count = 0;  
    while (data) {  
        data = data & (data-1);  
        count++;  
    }  
    return count;  
}
```

利用上面这个函数，我们还可以求出A和B的二进制中有多少位不相同，具体做法为：

1. 将A和B异或得到C，即C=A^B
2. 计算C的二进制中有多少个1

**怎么在O(n)的时间复杂度要求下，完成对0-n二进制中1的计数**

这个问题是对上面那个问题的变种，如果按照上面的方法，求每个数的二进制形式中1的个数需要的时间将与其本身带有1的个数所决定，所以每个数不可能在O(1)的时间复杂度下完成1的计数，也就不可能在遍历下达到O(n)的时间复杂度，那么怎样解决呢？

第一种方法是让后面的数通过前面的数求出其二进制数中1的个数。通过上例我们知道，每做一次`k & (k - 1)`的操作，都会得到一个比本身小，且1的个数为本身1的个数减一的数，所以利用这一点我们可以写出以下程序解决问题：

```c
result[0] = 0
for(int k = 0; k <= n; k++)
    result[k] = result[k & (k - 1)] + 1;
```

还有一种方法是观察规律写出相应的程序。通过写出前面的一些数，我们可以发现1的个数和2的幂存在着一些关系，所以根据这点我们可以写出以下代码：

```c
result[0] = 0;
for (int powerOfTwo = 1; powerOfTwo < n; powerOfTwo *= 2) {
    for (int i = 0; i < powerOfTwo; i++) {
        result[powerOfTwo + i] = result[i] + 1;
    }
}
```

实际上，这道题的解决方法有好几个，我也是从stackoverflow上的问题得到了灵感，具体可以点击[问题地址](http://stackoverflow.com/questions/43007574/how-to-count-the-number-of-1-bits-set-in-0-1-2-n-in-on-time)查看。

**C语言怎么获取随机数**

C语言取随机数的具体方法如下：

```c
#include <stdlib.h>
#include <time.h> 
/* 指定种子值为当前时间，以确保获取到的随机数不同 */
srand((unsigned)time(NULL));
for (int i=0; i<10; i++)
{
    printf("%d ", rand()%10);
}
```

**\*p++与(\*p)++有区别吗**

有，类似于\*和++这样的一员运算符遵循从右到左的结合顺序，具体可参考[C语言运算符优先级](http://en.cppreference.com/w/c/language/operator_precedence)。\*p++表示的是将指针移至下一地址并取其内容，而(\*p)++表示的是取指针内容并对其加一。

## 后记

C语言是一门很美妙的语言，本文也会随着本人经验的增长不定时更新。


